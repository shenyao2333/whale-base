package ${packageName}.entity;

import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.TableName;
import com.alibaba.excel.annotation.ExcelProperty;
import com.fasterxml.jackson.annotation.JsonFormat;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#if($table.tplCategory == 'tree' || $table.tplCategory == 'msub')
import com.baomidou.mybatisplus.annotation.TableField;
#end
#foreach ($import in $importList)
import ${import};
#end

/**
 * @author ${author}
 * @date ${datetime}
 *
 * @description ${functionName}对象 ${ClassName}
 */
@Data
@ApiModel
@Accessors(chain = true)
@TableName("${tableName}")
@EqualsAndHashCode(callSuper = false)
public class ${ClassName} {
    private static final long serialVersionUID = 1L;

#foreach ($column in $columns)
#if(!$column.superColumn)
    /** $column.columnComment */
#if($column.isList == '1')
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($parentheseIndex != -1)
    @ExcelProperty(value = "${comment}", convertExp = "$column.convertExp()")
    @ApiModelProperty("${comment}")
#elseif($column.javaType == 'Date')
    @DateTimeFormat("yyyy年MM月dd日HH时mm分ss秒")
    @ExcelProperty(value = "${comment}")
#else
    @ExcelProperty(value = "${comment}")
#end
#end
#if($column.isPk == '1')
    @TableId(value = "${column.columnName}", type = IdType.AUTO)
#end
    @TableField(value = "${column.columnName}")
    private $column.javaType $column.javaField;

#end
#end

#if($table.tplCategory == 'msub')
    /** $table.subTable.functionName信息 */
    @TableField(exist = false)
    private List<${subClassName}> ${subclassName}List;
#end

#if($table.tplCategory == 'tree')
    /**
    * 子菜单
    */
    @TableField(exist = false)
    private List<${ClassName}> children = new ArrayList<>();
#end
}
